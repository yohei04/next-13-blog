// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  articles Article[]
  comments Comment[]
  Like     Like[]
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId   Int
  user     User      @relation(fields: [userId], references: [id])
  comments Comment[]
  tags     Tag[]
  Like     Like[]

  @@index([userId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  articleId Int
  article   Article @relation(fields: [articleId], references: [id])

  @@index([userId])
  @@index([articleId])
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  articles Article[]
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  articleId Int
  article   Article @relation(fields: [articleId], references: [id])

  @@index([userId])
  @@index([articleId])
}
